package model.entity;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 12 10:34:41 BDT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XX_OM_POC_H_TEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        PocId {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getPocId();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setPocId((Number)value);
            }
        }
        ,
        LcUnit {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getLcUnit();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setLcUnit((Number)value);
            }
        }
        ,
        BuyerId {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getBuyerId();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setBuyerId((Number)value);
            }
        }
        ,
        Season {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getSeason();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        Style {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getStyle();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setStyle((String)value);
            }
        }
        ,
        StyleDescription {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getStyleDescription();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setStyleDescription((String)value);
            }
        }
        ,
        Brand {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getBrand();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setBrand((String)value);
            }
        }
        ,
        Fit {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getFit();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setFit((String)value);
            }
        }
        ,
        EndUser {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getEndUser();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setEndUser((String)value);
            }
        }
        ,
        ItemDescription {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getItemDescription();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setItemDescription((String)value);
            }
        }
        ,
        OrderQty {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getOrderQty();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setOrderQty((Number)value);
            }
        }
        ,
        CreatedBy {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        GmApproval {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getGmApproval();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setGmApproval((String)value);
            }
        }
        ,
        VersionNo {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getVersionNo();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setVersionNo((Number)value);
            }
        }
        ,
        VersionDate {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getVersionDate();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setVersionDate((Date)value);
            }
        }
        ,
        RespId {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getRespId();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setRespId((Number)value);
            }
        }
        ,
        TrackingBasis {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getTrackingBasis();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setTrackingBasis((String)value);
            }
        }
        ,
        ItemPurchaseType {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getItemPurchaseType();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setItemPurchaseType((String)value);
            }
        }
        ,
        Status {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getStatus();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setStatus((Number)value);
            }
        }
        ,
        AlternetSeason {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getAlternetSeason();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setAlternetSeason((String)value);
            }
        }
        ,
        Dept {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getDept();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setDept((Number)value);
            }
        }
        ,
        FabricFinance {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getFabricFinance();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setFabricFinance((Number)value);
            }
        }
        ,
        TrimFinance {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getTrimFinance();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setTrimFinance((Number)value);
            }
        }
        ,
        WashFinance {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getWashFinance();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setWashFinance((Number)value);
            }
        }
        ,
        CmMerchandiserD {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getCmMerchandiserD();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setCmMerchandiserD((String)value);
            }
        }
        ,
        XX_OM_POC_L_TEO {
            public Object get(XX_OM_POC_H_TEOImpl obj) {
                return obj.getXX_OM_POC_L_TEO();
            }

            public void put(XX_OM_POC_H_TEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(XX_OM_POC_H_TEOImpl object);

        public abstract void put(XX_OM_POC_H_TEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int POCID = AttributesEnum.PocId.index();
    public static final int LCUNIT = AttributesEnum.LcUnit.index();
    public static final int BUYERID = AttributesEnum.BuyerId.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int STYLE = AttributesEnum.Style.index();
    public static final int STYLEDESCRIPTION = AttributesEnum.StyleDescription.index();
    public static final int BRAND = AttributesEnum.Brand.index();
    public static final int FIT = AttributesEnum.Fit.index();
    public static final int ENDUSER = AttributesEnum.EndUser.index();
    public static final int ITEMDESCRIPTION = AttributesEnum.ItemDescription.index();
    public static final int ORDERQTY = AttributesEnum.OrderQty.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int GMAPPROVAL = AttributesEnum.GmApproval.index();
    public static final int VERSIONNO = AttributesEnum.VersionNo.index();
    public static final int VERSIONDATE = AttributesEnum.VersionDate.index();
    public static final int RESPID = AttributesEnum.RespId.index();
    public static final int TRACKINGBASIS = AttributesEnum.TrackingBasis.index();
    public static final int ITEMPURCHASETYPE = AttributesEnum.ItemPurchaseType.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int ALTERNETSEASON = AttributesEnum.AlternetSeason.index();
    public static final int DEPT = AttributesEnum.Dept.index();
    public static final int FABRICFINANCE = AttributesEnum.FabricFinance.index();
    public static final int TRIMFINANCE = AttributesEnum.TrimFinance.index();
    public static final int WASHFINANCE = AttributesEnum.WashFinance.index();
    public static final int CMMERCHANDISERD = AttributesEnum.CmMerchandiserD.index();
    public static final int XX_OM_POC_L_TEO = AttributesEnum.XX_OM_POC_L_TEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XX_OM_POC_H_TEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.entity.XX_OM_POC_H_TEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for PocId, using the alias name PocId.
     * @return the PocId
     */
    public Number getPocId() {
        return (Number)getAttributeInternal(POCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PocId.
     * @param value value to set the PocId
     */
    public void setPocId(Number value) {
        setAttributeInternal(POCID, value);
    }

    /**
     * Gets the attribute value for LcUnit, using the alias name LcUnit.
     * @return the LcUnit
     */
    public Number getLcUnit() {
        return (Number)getAttributeInternal(LCUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for LcUnit.
     * @param value value to set the LcUnit
     */
    public void setLcUnit(Number value) {
        setAttributeInternal(LCUNIT, value);
    }

    /**
     * Gets the attribute value for BuyerId, using the alias name BuyerId.
     * @return the BuyerId
     */
    public Number getBuyerId() {
        return (Number)getAttributeInternal(BUYERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuyerId.
     * @param value value to set the BuyerId
     */
    public void setBuyerId(Number value) {
        setAttributeInternal(BUYERID, value);
    }

    /**
     * Gets the attribute value for Season, using the alias name Season.
     * @return the Season
     */
    public String getSeason() {
        return (String)getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for Season.
     * @param value value to set the Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for Style, using the alias name Style.
     * @return the Style
     */
    public String getStyle() {
        return (String)getAttributeInternal(STYLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Style.
     * @param value value to set the Style
     */
    public void setStyle(String value) {
        value=  value.trim();   // added on 11 mar 2021 by arif  to eliminate space before or after value
        setAttributeInternal(STYLE, value);
    }

    /**
     * Gets the attribute value for StyleDescription, using the alias name StyleDescription.
     * @return the StyleDescription
     */
    public String getStyleDescription() {
        return (String)getAttributeInternal(STYLEDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for StyleDescription.
     * @param value value to set the StyleDescription
     */
    public void setStyleDescription(String value) {
        setAttributeInternal(STYLEDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for Brand, using the alias name Brand.
     * @return the Brand
     */
    public String getBrand() {
        return (String)getAttributeInternal(BRAND);
    }

    /**
     * Sets <code>value</code> as the attribute value for Brand.
     * @param value value to set the Brand
     */
    public void setBrand(String value) {
        setAttributeInternal(BRAND, value);
    }

    /**
     * Gets the attribute value for Fit, using the alias name Fit.
     * @return the Fit
     */
    public String getFit() {
        return (String)getAttributeInternal(FIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Fit.
     * @param value value to set the Fit
     */
    public void setFit(String value) {
        setAttributeInternal(FIT, value);
    }

    /**
     * Gets the attribute value for EndUser, using the alias name EndUser.
     * @return the EndUser
     */
    public String getEndUser() {
        return (String)getAttributeInternal(ENDUSER);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndUser.
     * @param value value to set the EndUser
     */
    public void setEndUser(String value) {
        setAttributeInternal(ENDUSER, value);
    }

    /**
     * Gets the attribute value for ItemDescription, using the alias name ItemDescription.
     * @return the ItemDescription
     */
    public String getItemDescription() {
        return (String)getAttributeInternal(ITEMDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemDescription.
     * @param value value to set the ItemDescription
     */
    public void setItemDescription(String value) {
        setAttributeInternal(ITEMDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for OrderQty, using the alias name OrderQty.
     * @return the OrderQty
     */
    public Number getOrderQty() {
        return (Number)getAttributeInternal(ORDERQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrderQty.
     * @param value value to set the OrderQty
     */
    public void setOrderQty(Number value) {
       
        setAttributeInternal(ORDERQTY, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for GmApproval, using the alias name GmApproval.
     * @return the GmApproval
     */
    public String getGmApproval() {
        return (String)getAttributeInternal(GMAPPROVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for GmApproval.
     * @param value value to set the GmApproval
     */
    public void setGmApproval(String value) {
        setAttributeInternal(GMAPPROVAL, value);
    }

    /**
     * Gets the attribute value for VersionNo, using the alias name VersionNo.
     * @return the VersionNo
     */
    public Number getVersionNo() {
        return (Number)getAttributeInternal(VERSIONNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for VersionNo.
     * @param value value to set the VersionNo
     */
    public void setVersionNo(Number value) {
        setAttributeInternal(VERSIONNO, value);
    }

    /**
     * Gets the attribute value for VersionDate, using the alias name VersionDate.
     * @return the VersionDate
     */
    public Date getVersionDate() {
        return (Date)getAttributeInternal(VERSIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for VersionDate.
     * @param value value to set the VersionDate
     */
    public void setVersionDate(Date value) {
        setAttributeInternal(VERSIONDATE, value);
    }

    /**
     * Gets the attribute value for RespId, using the alias name RespId.
     * @return the RespId
     */
    public Number getRespId() {
        return (Number)getAttributeInternal(RESPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RespId.
     * @param value value to set the RespId
     */
    public void setRespId(Number value) {
        setAttributeInternal(RESPID, value);
    }

    /**
     * Gets the attribute value for TrackingBasis, using the alias name TrackingBasis.
     * @return the TrackingBasis
     */
    public String getTrackingBasis() {
        return (String)getAttributeInternal(TRACKINGBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TrackingBasis.
     * @param value value to set the TrackingBasis
     */
    public void setTrackingBasis(String value) {
        setAttributeInternal(TRACKINGBASIS, value);
    }

    /**
     * Gets the attribute value for ItemPurchaseType, using the alias name ItemPurchaseType.
     * @return the ItemPurchaseType
     */
    public String getItemPurchaseType() {
        return (String)getAttributeInternal(ITEMPURCHASETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemPurchaseType.
     * @param value value to set the ItemPurchaseType
     */
    public void setItemPurchaseType(String value) {
        setAttributeInternal(ITEMPURCHASETYPE, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the Status
     */
    public Number getStatus() {
        return (Number)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(Number value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for AlternetSeason, using the alias name AlternetSeason.
     * @return the AlternetSeason
     */
    public String getAlternetSeason() {
        return (String)getAttributeInternal(ALTERNETSEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for AlternetSeason.
     * @param value value to set the AlternetSeason
     */
    public void setAlternetSeason(String value) {
        setAttributeInternal(ALTERNETSEASON, value);
    }

    /**
     * Gets the attribute value for Dept, using the alias name Dept.
     * @return the Dept
     */
    public Number getDept() {
        return (Number)getAttributeInternal(DEPT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dept.
     * @param value value to set the Dept
     */
    public void setDept(Number value) {
        setAttributeInternal(DEPT, value);
    }

    /**
     * Gets the attribute value for FabricFinance, using the alias name FabricFinance.
     * @return the FabricFinance
     */
    public Number getFabricFinance() {
        return (Number)getAttributeInternal(FABRICFINANCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FabricFinance.
     * @param value value to set the FabricFinance
     */
    public void setFabricFinance(Number value) {
        setAttributeInternal(FABRICFINANCE, value);
    }

    /**
     * Gets the attribute value for TrimFinance, using the alias name TrimFinance.
     * @return the TrimFinance
     */
    public Number getTrimFinance() {
        return (Number)getAttributeInternal(TRIMFINANCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TrimFinance.
     * @param value value to set the TrimFinance
     */
    public void setTrimFinance(Number value) {
        setAttributeInternal(TRIMFINANCE, value);
    }

    /**
     * Gets the attribute value for WashFinance, using the alias name WashFinance.
     * @return the WashFinance
     */
    public Number getWashFinance() {
        return (Number)getAttributeInternal(WASHFINANCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for WashFinance.
     * @param value value to set the WashFinance
     */
    public void setWashFinance(Number value) {
        setAttributeInternal(WASHFINANCE, value);
    }

    /**
     * Gets the attribute value for CmMerchandiserD, using the alias name CmMerchandiserD.
     * @return the CmMerchandiserD
     */
    public String getCmMerchandiserD() {
        return (String)getAttributeInternal(CMMERCHANDISERD);
    }

    /**
     * Sets <code>value</code> as the attribute value for CmMerchandiserD.
     * @param value value to set the CmMerchandiserD
     */
    public void setCmMerchandiserD(String value) {
        setAttributeInternal(CMMERCHANDISERD, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXX_OM_POC_L_TEO() {
        return (RowIterator)getAttributeInternal(XX_OM_POC_L_TEO);
    }


    /**
     * @param pocId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number pocId) {
        return new Key(new Object[]{pocId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("XX_OM_POC_H_T_POC_ID_SEQ",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setPocId(sVal); 
        setItemPurchaseType("Imported");
        
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {

        String user = null;
        String respId = null;
        String DeptId ="1";

        try {
            Map sessionScope = ADFContext.getCurrent().getSessionScope();
            user = (String)sessionScope.get("userIdS");
            respId = (String)sessionScope.get("respIdS");
            //respIdS
        } catch (Exception ee) {
            ;
        }
        if (DML_UPDATE == operation) {
            try {
                setLastUpdatedDate((Date)Date.getCurrentDate());
                setLastUpdatedBy(new oracle.jbo.domain.Number(user));
                setRespId(new oracle.jbo.domain.Number(respId));
            } catch (SQLException f) {
                System.out.println(f.getMessage());
            }
        } else if (DML_INSERT == operation) {
            System.out.println("======= @ DML_INSERT OPERATION ==========");
            try {
                setCreatedBy(new oracle.jbo.domain.Number(user));
                setCreationDate((Date)Date.getCurrentDate());
                setRespId(new oracle.jbo.domain.Number(respId));
                setDept(new oracle.jbo.domain.Number(DeptId));
            } catch (SQLException f) {
                ;
            }
        }
        
        super.doDML(operation, e);
    }
}
